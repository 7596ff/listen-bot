ClientRequest {
  domain: null,
  _events: 
   { abort: { [Function: bound onceWrapper] listener: [Function] },
     aborted: { [Function: bound onceWrapper] listener: [Function] },
     error: { [Function: bound onceWrapper] listener: [Function] },
     timeout: { [Function: bound onceWrapper] listener: [Function] },
     prefinish: [Function: requestOnPrefinish] },
  _eventsCount: 5,
  _maxListeners: undefined,
  output: [],
  outputEncodings: [],
  outputCallbacks: [],
  outputSize: 0,
  writable: true,
  _last: true,
  upgrading: false,
  chunkedEncoding: false,
  shouldKeepAlive: false,
  useChunkedEncodingByDefault: true,
  sendDate: false,
  _removedHeader: {},
  _contentLength: 27,
  _hasBody: true,
  _trailer: '',
  finished: true,
  _headerSent: true,
  socket: 
   TLSSocket {
     _tlsOptions: 
      { pipe: null,
        secureContext: [Object],
        isServer: false,
        requestCert: true,
        rejectUnauthorized: true,
        session: <Buffer 30 82 06 a7 02 01 01 02 02 03 03 04 02 c0 2f 04 20 5a e2 39 f0 a5 73 80 dc 95 76 dc 21 d6 25 63 52 ed e0 74 52 9c 3f 31 0b e7 c4 98 70 48 ba c4 83 04 ... >,
        NPNProtocols: undefined,
        ALPNProtocols: undefined,
        requestOCSP: undefined },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: null,
     servername: null,
     npnProtocol: false,
     alpnProtocol: false,
     authorized: true,
     authorizationError: null,
     encrypted: true,
     _events: 
      { close: [Object],
        end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        secure: [Function],
        free: [Function: onFree],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        timeout: [Object] },
     _eventsCount: 10,
     connecting: false,
     _hadError: false,
     _handle: null,
     _parent: null,
     _host: 'discordapp.com',
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: false,
     domain: null,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: true,
        ended: true,
        finished: true,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: true,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: false,
     allowHalfOpen: false,
     destroyed: true,
     _bytesDispatched: 331,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: undefined,
     _server: null,
     ssl: null,
     _requestCert: true,
     _rejectUnauthorized: true,
     parser: null,
     _httpMessage: [Circular],
     _idleTimeout: -1,
     _idleNext: null,
     _idlePrev: null,
     _idleStart: 3472,
     read: [Function],
     _consuming: true },
  connection: 
   TLSSocket {
     _tlsOptions: 
      { pipe: null,
        secureContext: [Object],
        isServer: false,
        requestCert: true,
        rejectUnauthorized: true,
        session: <Buffer 30 82 06 a7 02 01 01 02 02 03 03 04 02 c0 2f 04 20 5a e2 39 f0 a5 73 80 dc 95 76 dc 21 d6 25 63 52 ed e0 74 52 9c 3f 31 0b e7 c4 98 70 48 ba c4 83 04 ... >,
        NPNProtocols: undefined,
        ALPNProtocols: undefined,
        requestOCSP: undefined },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: null,
     servername: null,
     npnProtocol: false,
     alpnProtocol: false,
     authorized: true,
     authorizationError: null,
     encrypted: true,
     _events: 
      { close: [Object],
        end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        secure: [Function],
        free: [Function: onFree],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        timeout: [Object] },
     _eventsCount: 10,
     connecting: false,
     _hadError: false,
     _handle: null,
     _parent: null,
     _host: 'discordapp.com',
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: false,
     domain: null,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: true,
        ended: true,
        finished: true,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: true,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: false,
     allowHalfOpen: false,
     destroyed: true,
     _bytesDispatched: 331,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: undefined,
     _server: null,
     ssl: null,
     _requestCert: true,
     _rejectUnauthorized: true,
     parser: null,
     _httpMessage: [Circular],
     _idleTimeout: -1,
     _idleNext: null,
     _idlePrev: null,
     _idleStart: 3472,
     read: [Function],
     _consuming: true },
  _header: 'POST /api/v6/channels/255083632149004301/messages HTTP/1.1\r\nUser-Agent: DiscordBot (https://github.com/abalabahaha/eris, 0.6.0)\r\nAuthorization: Bot MjU4MDYxMjk0MzU0MTY5ODYx.C4Y90w.hc-H4xpDdh2fhf4ky1LQFw2WcdI\r\nContent-Type: application/json\r\nHost: discordapp.com\r\nConnection: close\r\nContent-Length: 27\r\n\r\n',
  _headers: 
   { 'user-agent': 'DiscordBot (https://github.com/abalabahaha/eris, 0.6.0)',
     authorization: 'Bot MjU4MDYxMjk0MzU0MTY5ODYx.C4Y90w.hc-H4xpDdh2fhf4ky1LQFw2WcdI',
     'content-type': 'application/json',
     host: 'discordapp.com' },
  _headerNames: 
   { 'user-agent': 'User-Agent',
     authorization: 'Authorization',
     'content-type': 'Content-Type',
     host: 'Host' },
  _onPendingData: null,
  agent: 
   Agent {
     domain: null,
     _events: { free: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     defaultPort: 443,
     protocol: 'https:',
     options: { path: null },
     requests: {},
     sockets: { 'discordapp.com:443:::::::::': [Object] },
     freeSockets: {},
     keepAliveMsecs: 1000,
     keepAlive: false,
     maxSockets: Infinity,
     maxFreeSockets: 256,
     maxCachedSessions: 100,
     _sessionCache: { map: [Object], list: [Object] } },
  socketPath: undefined,
  timeout: undefined,
  method: 'POST',
  path: '/api/v6/channels/255083632149004301/messages',
  _ended: true,
  res: 
   IncomingMessage {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: false,
     domain: null,
     _events: { end: [Function: responseOnEnd], data: [Function] },
     _eventsCount: 2,
     _maxListeners: undefined,
     socket: 
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: null,
        npnProtocol: false,
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 10,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'discordapp.com',
        _readableState: [Object],
        readable: false,
        domain: null,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        _bytesDispatched: 331,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 3472,
        read: [Function],
        _consuming: true },
     connection: 
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: null,
        npnProtocol: false,
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 10,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'discordapp.com',
        _readableState: [Object],
        readable: false,
        domain: null,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        _bytesDispatched: 331,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 3472,
        read: [Function],
        _consuming: true },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers: 
      { date: 'Wed, 10 May 2017 04:26:03 GMT',
        'content-type': 'application/json',
        'content-length': '49',
        connection: 'close',
        'set-cookie': [Object],
        'strict-transport-security': 'max-age=31536000; includeSubDomains',
        'x-ratelimit-limit': '5',
        'x-ratelimit-remaining': '4',
        'x-ratelimit-reset': '1494390369',
        via: '1.1 google',
        'alt-svc': 'clear',
        server: 'cloudflare-nginx',
        'cf-ray': '35ca2358fce35eb2-TPA' },
     rawHeaders: 
      [ 'Date',
        'Wed, 10 May 2017 04:26:03 GMT',
        'Content-Type',
        'application/json',
        'Content-Length',
        '49',
        'Connection',
        'close',
        'Set-Cookie',
        '__cfduid=d2746443d9bf1018ec8d287f2ee4b23471494390363; expires=Thu, 10-May-18 04:26:03 GMT; path=/; domain=.discordapp.com; HttpOnly',
        'Strict-Transport-Security',
        'max-age=31536000; includeSubDomains',
        'X-RateLimit-Limit',
        '5',
        'X-RateLimit-Remaining',
        '4',
        'X-RateLimit-Reset',
        '1494390369',
        'Via',
        '1.1 google',
        'Alt-Svc',
        'clear',
        'Server',
        'cloudflare-nginx',
        'CF-RAY',
        '35ca2358fce35eb2-TPA' ],
     trailers: {},
     rawTrailers: [],
     upgrade: false,
     url: '',
     method: null,
     statusCode: 403,
     statusMessage: 'FORBIDDEN',
     client: 
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: null,
        npnProtocol: false,
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 10,
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: 'discordapp.com',
        _readableState: [Object],
        readable: false,
        domain: null,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        _bytesDispatched: 331,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular],
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 3472,
        read: [Function],
        _consuming: true },
     _consuming: true,
     _dumped: false,
     req: [Circular],
     read: [Function] },
  aborted: undefined,
  timeoutCb: [Function: emitTimeout],
  upgradeOrConnect: false,
  parser: null,
  maxHeadersCount: null }